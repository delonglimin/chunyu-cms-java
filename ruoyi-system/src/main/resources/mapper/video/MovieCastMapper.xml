<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.video.mapper.MovieCastMapper">

    <resultMap type="MovieCast" id="MovieCastResult">
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="createBy"    column="create_by"    />
        <result property="updateBy"    column="update_by"    />
        <result property="remark"    column="remark"    />
        <result property="version"    column="version"    />
        <result property="id"    column="id"    />
        <result property="movieId"    column="movie_id"    />
        <result property="actorId"    column="actor_id"    />
        <result property="professionId"    column="profession_id"    />
        <result property="role"    column="role"    />
    </resultMap>
    <sql id="selectMovieCastVo">
        select create_time, update_time, create_by, update_by, remark, version, id, movie_id, actor_id, profession_id from movie_cast
    </sql>

    <select id="selectMovieCastList" parameterType="MovieCast">
       <include refid="selectMovieCastVo"></include>
        <where>
            <if test="version != null "> and version = #{version}</if>
            <if test="movieId != null "> and movie_id = #{movieId}</if>
            <if test="actorId != null "> and actor_id = #{actorId}</if>
            <if test="professionId != null "> and profession_id = #{professionId}</if>
        </where>
    </select>

    <select id="selectMovieCastListMap" parameterType="MovieCast" resultType="java.util.Map">
        select  c.id, c.movie_id, c.actor_id, c.profession_id ,c.role,a.avatar as actorAvatar, a.birthday as actorBirthday,a.gender as actorGender,a.id as actorId,a.`name` as actorName,p.id as professionId,p.mpath as professionMpath,p.`name` as professionName,bc.`name` as countryName from movie_cast c
        left join actor a on a.id = c.actor_id
        LEFT JOIN basic_profession p ON p.id = c.profession_id
        LEFT JOIN basic_country bc on a.country_id = bc.id
        <where>
            <if test="version != null "> and version = #{version}</if>
            <if test="movieId != null "> and movie_id = #{movieId}</if>
            <if test="actorId != null "> and actor_id = #{actorId}</if>
            <if test="professionId != null "> and profession_id = #{professionId}</if>
        </where>
    </select>

    <select id="selectMovieCastById" parameterType="Long" resultMap="MovieCastResult">
        <include refid="selectMovieCastVo"/>
        where id = #{id}
    </select>

    <insert id="insertMovieCast" parameterType="MovieCast" useGeneratedKeys="true" keyProperty="id">
        insert into movie_cast
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createBy != null">create_by,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="remark != null">remark,</if>
            <if test="version != null">version,</if>
            <if test="movieId != null">movie_id,</if>
            <if test="actorId != null">actor_id,</if>
            <if test="professionId != null">profession_id,</if>
            <if test="role != null">role,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="remark != null">#{remark},</if>
            <if test="version != null">#{version},</if>
            <if test="movieId != null">#{movieId},</if>
            <if test="actorId != null">#{actorId},</if>
            <if test="professionId != null">#{professionId},</if>
            <if test="role != null">#{role},</if>
        </trim>
    </insert>

    <update id="updateMovieCast" parameterType="MovieCast">
        update movie_cast
        <trim prefix="SET" suffixOverrides=",">
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="version != null">version = #{version},</if>
            <if test="movieId != null">movie_id = #{movieId},</if>
            <if test="actorId != null">actor_id = #{actorId},</if>
            <if test="professionId != null">profession_id = #{professionId},</if>
            <if test="role != null">role = #{role},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteMovieCastById" parameterType="Long">
        delete from movie_cast where id = #{id}
    </delete>

    <delete id="deleteMovieCastByIds" parameterType="String">
        delete from movie_cast where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>