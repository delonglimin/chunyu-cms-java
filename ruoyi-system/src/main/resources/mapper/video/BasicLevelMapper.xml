<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.video.mapper.BasicLevelMapper">

    <resultMap type="BasicLevel" id="BasicLevelResult">
        <result property="id"    column="id"    />
        <result property="countryId"    column="country_id"    />
        <result property="level"    column="level"    />
        <result property="levelZh"    column="level_zh"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="createBy"    column="create_by"    />
        <result property="updateBy"    column="update_by"    />
        <result property="remark"    column="remark"    />
        <result property="version"    column="version"    />
        <result property="status"    column="status"    />
        <result property="descript"    column="descript"    />
        <association property="country" column="country_id" javaType="BasicCountry" resultMap="BasicCountryResult"/>

    </resultMap>


    <resultMap type="BasicCountry" id="BasicCountryResult">
        <result property="id"    column="country_id"    />
        <result property="name"    column="country_name"    />
        <result property="fullname"    column="country_fullname"    />
    </resultMap>

    <sql id="selectBasicLevelVo">
        select id, country_id, level, level_zh, create_time, update_time, create_by, update_by, remark, version, status, descript from basic_level
    </sql>

    <select id="selectBasicLevelList" parameterType="BasicLevel" resultMap="BasicLevelResult">
        select a.id, a.country_id, a.level, a.level_zh, a.create_time, a.update_time, a.create_by, a.update_by, a.remark, a.version, a.status, a.descript,
        c.name country_name,c.fullname country_fullname,c.id country_id
        from basic_level a
        left join basic_country c on c.id = a.country_id
        <where>
            <if test="countryId != null "> and country_id = #{countryId}</if>
            <if test="level != null  and level != ''"> and level = #{level}</if>
            <if test="levelZh != null  and levelZh != ''"> and level_zh = #{levelZh}</if>
            <if test="version != null "> and version = #{version}</if>
            <if test="status != null "> and status = #{status}</if>
            <if test="descript != null  and descript != ''"> and descript = #{descript}</if>
        </where>
    </select>

    <select id="selectBasicLevelById" parameterType="Long" resultMap="BasicLevelResult">
        select a.id, a.country_id, a.level, a.level_zh, a.create_time, a.update_time, a.create_by, a.update_by, a.remark, a.version, a.status, a.descript,
        c.name country_name,c.fullname country_fullname,c.id country_id
        from basic_level a
        left join basic_country b on b.id = a.country_id
        <where>
           and a.id = #{id}
        </where>
    </select>

    <insert id="insertBasicLevel" parameterType="BasicLevel" useGeneratedKeys="true" keyProperty="id">
        insert into basic_level
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="countryId != null">country_id,</if>
            <if test="level != null">level,</if>
            <if test="levelZh != null">level_zh,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createBy != null">create_by,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="remark != null">remark,</if>
            <if test="version != null">version,</if>
            <if test="status != null">status,</if>
            <if test="descript != null">descript,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="countryId != null">#{countryId},</if>
            <if test="level != null">#{level},</if>
            <if test="levelZh != null">#{levelZh},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="remark != null">#{remark},</if>
            <if test="version != null">#{version},</if>
            <if test="status != null">#{status},</if>
            <if test="descript != null">#{descript},</if>
        </trim>

    </insert>

    <update id="updateBasicLevel" parameterType="BasicLevel">
        update basic_level
        <trim prefix="SET" suffixOverrides=",">
            <if test="countryId != null">country_id = #{countryId},</if>
            <if test="level != null">level = #{level},</if>
            <if test="levelZh != null">level_zh = #{levelZh},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="version != null">version = #{version},</if>
            <if test="status != null">status = #{status},</if>
            <if test="descript != null">descript = #{descript},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBasicLevelById" parameterType="Long">
        delete from basic_level where id = #{id}
    </delete>

    <delete id="deleteBasicLevelByIds" parameterType="String">
        delete from basic_level where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteBasicCountryByIds" parameterType="String">
        delete from basic_country where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteBasicCountryById" parameterType="Long">
        delete from basic_country where id = #{id}
    </delete>

    <insert id="batchBasicCountry">
        insert into basic_country( create_time, update_time, create_by, update_by, remark, version, id, name, code, type, fullname, continent, nameEn, fullnameEn, originalName, originalFullname, beginDate, endDate, flag, brief) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.createTime}, #{item.updateTime}, #{item.createBy}, #{item.updateBy}, #{item.remark}, #{item.version}, #{item.id}, #{item.name}, #{item.code}, #{item.type}, #{item.fullname}, #{item.continent}, #{item.nameEn}, #{item.fullnameEn}, #{item.originalName}, #{item.originalFullname}, #{item.beginDate}, #{item.endDate}, #{item.flag}, #{item.brief})
        </foreach>
    </insert>
</mapper>